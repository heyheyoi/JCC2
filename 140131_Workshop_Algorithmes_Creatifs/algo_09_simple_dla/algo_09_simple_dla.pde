// Algorithmes cr√©atifs - Abelardo Gil-Fournier, 2014
// http://abelardogfournier.org
// http://github.org/abe-
//
// In the second part of this workshop we are going to work
// with another type of system that holds a certain amount
// of intrinsic creativity by its own. We'll work now with 
// graphs. But before building such a structure, we are going
// to start from a geometrical pattern that comes from the
// simulation of biological phaenomena. A pattern generated by
// the well known and common DLA algorithm. We are going again
// to build everything from vectors. The implementation of the
// algorithm we are going to use here is based on the one presented
// at Generative Gestaltung.

ArrayList <Atom> atoms;

void setup() {
  size(600, 600);

  atoms = new ArrayList();
  Atom a = new Atom(width/4, height/2, 10);
  atoms.add(a);
}


void draw() {
  background(255);
  
  addNew();
  
  for (Atom a : atoms) {
    a.draw();
  }
}


void addNew() {
  PVector pos = new PVector(random(width), random(height));
  float r = random(5, 10);

  Atom closest = null;
  float closestDist = 1000000;

  for (Atom a : atoms) {
    float d = a.dist(pos);
    if (d < closestDist) {
      closest = a;
      closestDist = d;
    }
  }    

  PVector next = pos.get();
  next.sub(closest);
  next.setMag(closest.diam/2 + r);
  next.add(closest);

  Atom newAtom = new Atom(next.x, next.y, 2*r);
  atoms.add(newAtom);
}
